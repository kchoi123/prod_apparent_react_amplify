{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\src\\\\components\\\\myProfile\\\\index.js\";\n//This component is for Edit or View my Profile \nimport React, { Component } from \"react\";\nimport { FormContainer, FormTitle, FormLabel, FormButton, Dropdown, OptionForDropdown } from \"../form\";\nimport API from \"../../utils/API\";\nimport KidProfile from \"../kidProfile\";\nvar statesList = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"];\n\nvar MyProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyProfile, _Component);\n\n  function MyProfile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyProfile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyProfile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      disabled: true,\n      kidDisabled: true,\n      userInfo: [{\n        for: \"userName\",\n        label: \"Enter your username\",\n        value: _this.props.userName\n      }, {\n        for: \"city\",\n        //db column\n        label: \"Enter your city\",\n        //message u see \n        value: _this.props.city\n      }, {\n        for: \"state\",\n        label: \"Choose a state\",\n        value: _this.props.state,\n        options: statesList\n      }, {\n        for: \"photoLink\",\n        label: \"Enter a link for your profile picture\",\n        value: _this.props.photoLink\n      }],\n      kidInfo: [{\n        name: \"\",\n        id: 1,\n        gradeLevel: \"\",\n        schoolId: \"\"\n      }],\n      schools: [],\n      //holds all the info related to school \n      kids: [],\n      //Holds all the info related to kids \n      //Grade Level dropdown options \n      gradeLevels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n    };\n\n    _this.handleInputChange = function (event) {\n      // const {name, value} = event.target;\n      var value = event.target.value; // const column = event.target.id;\n\n      var key = event.target.getAttribute(\"data-id\");\n\n      var copy = _toConsumableArray(_this.state.userInfo);\n\n      copy[key].value = value;\n\n      _this.setState({\n        userInfo: copy // [column] : value\n\n      });\n    };\n\n    _this.handleEditButtonClick = function (event) {\n      event.preventDefault(); // console.log(\"EDIT MY PROFILE\");\n\n      _this.setState({\n        disabled: false\n      });\n    };\n\n    _this.handleSaveButtonClick = function (event) {\n      event.preventDefault(); // console.log(\"SAVE MY PROFILE\");\n\n      _this.setState({\n        disabled: true\n      });\n\n      var userUpdatedData = {\n        userName: _this.state.userInfo[0].value,\n        city: _this.state.userInfo[1].value,\n        state: _this.state.userInfo[2].value,\n        photoLink: _this.state.userInfo[3].value\n      };\n      console.log(\"Parent Details \", userUpdatedData); //Updates the user profile \n\n      API.updateProfile(userUpdatedData).then(function (res) {\n        window.location.reload();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleEditKidButtonClick = function (event) {\n      event.preventDefault(); // console.log(\"EDIT Kid Info\");\n\n      _this.setState({\n        kidDisabled: false\n      });\n    };\n\n    _this.handleInputKidChange = function (event) {\n      console.log(\"handleInputKidChange\");\n      var value = event.target.value;\n      var key = event.target.getAttribute(\"data-id\");\n\n      var copy = _toConsumableArray(_this.state.kidInfo); // console.log(\"Copy\", copy); \n\n\n      copy[key].value = value;\n\n      _this.setState({\n        kidInfo: copy\n      });\n    };\n\n    _this.handleUpdateButtonClick = function (event) {\n      var kidUpdatedData = {\n        name: _this.state.kidInfo[0].value,\n        id: _this.state.kidInfo[1].value,\n        gradeLevel: _this.state.kidInfo[2].value,\n        schoolId: _this.state.kidInfo[3].value\n      };\n      console.log(\"Kid Details \", kidUpdatedData); //Updates the kid profile \n\n      API.updateKidForAParent(kidUpdatedData).then(function (res) {\n        console.log(\"Kid data - upd\", res);\n        window.location.reload();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleDeleteKidInfo = function (event) {\n      event.preventDefault();\n      console.log(\"Delete KID INFO\");\n      API.deleteKidForAParent().then(function (res) {\n        console.log(\"Kid deleted\");\n        window.location.reload();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MyProfile, [{\n    key: \"componentDidMount\",\n    //***************Kid Info */\n    //-------------------------------------\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // retrieves all the kids for the logged in parent... \n      API.findAllKidsForAParent().then(function (res) {\n        console.log(\"Kids for parent\", res.data);\n\n        _this2.setState({\n          kids: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      }); // retrieves all the schools - filter by state \n\n      API.getAllSchools().then(function (res) {\n        console.log(res.data);\n\n        _this2.setState({\n          schools: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(FormContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.state.disabled ? React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"rounded-circle view-pic\",\n        src: this.props.photoLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(FormTitle, {\n        title: \"View My Profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })) : React.createElement(FormTitle, {\n        title: \"Update Profile Info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), this.state.userInfo.map(function (user, i) {\n        if (user.for !== \"state\") {\n          return React.createElement(FormLabel, {\n            key: i,\n            data: i,\n            for: user.for,\n            name: user.for,\n            label: user.label,\n            disabled: _this3.state.disabled,\n            value: user.value,\n            handleChange: _this3.handleInputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(Dropdown, {\n            key: i,\n            data: i,\n            for: user.for,\n            label: user.label,\n            value: user.value,\n            disabled: _this3.state.disabled,\n            handleChange: _this3.handleInputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236\n            },\n            __self: this\n          }, user.options.map(function (item, j) {\n            return React.createElement(OptionForDropdown, {\n              option: item,\n              value: item,\n              key: j,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 247\n              },\n              __self: this\n            });\n          }));\n        }\n      }), this.state.disabled ? React.createElement(FormButton, {\n        nameButton: \"Edit Profile\",\n        handleButtonClick: this.handleEditButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(FormButton, {\n        nameButton: \"Save Profile\",\n        handleButtonClick: this.handleSaveButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      })), this.state.kids.length ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, this.state.kids.map(function (kid, id) {\n        return React.createElement(KidProfile, {\n          key: id,\n          name: kid.name,\n          grade: kid.gradeLevel,\n          school: kid.schoolId,\n          kidId: kid.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        });\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"No Family Member(s) found\")));\n    }\n  }]);\n\n  return MyProfile;\n}(Component);\n\nexport default MyProfile;","map":{"version":3,"sources":["C:\\Users\\kevin\\Documents\\UCB_bootcamp\\Homework\\APParent\\client\\src\\components\\myProfile\\index.js"],"names":["React","Component","FormContainer","FormTitle","FormLabel","FormButton","Dropdown","OptionForDropdown","API","KidProfile","statesList","MyProfile","state","disabled","kidDisabled","userInfo","for","label","value","props","userName","city","options","photoLink","kidInfo","name","id","gradeLevel","schoolId","schools","kids","gradeLevels","handleInputChange","event","target","key","getAttribute","copy","setState","handleEditButtonClick","preventDefault","handleSaveButtonClick","userUpdatedData","console","log","updateProfile","then","res","window","location","reload","catch","err","handleEditKidButtonClick","handleInputKidChange","handleUpdateButtonClick","kidUpdatedData","updateKidForAParent","handleDeleteKidInfo","deleteKidForAParent","findAllKidsForAParent","data","getAllSchools","map","user","i","item","j","length","kid"],"mappings":"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","sourcesContent":["//This component is for Edit or View my Profile \n\nimport React, { Component } from \"react\";\nimport { FormContainer, FormTitle, FormLabel, FormButton, Dropdown, OptionForDropdown } from \"../form\";\nimport API from \"../../utils/API\";\nimport KidProfile from \"../kidProfile\";\n\nconst statesList = [\"Alabama\",\"Alaska\",\"Arizona\",\"Arkansas\",\"California\",\"Colorado\",\"Connecticut\",\"Delaware\",\"Florida\",\"Georgia\",\"Hawaii\",\"Idaho\",\"Illinois\",\"Indiana\",\"Iowa\",\"Kansas\",\"Kentucky\",\"Louisiana\",\"Maine\",\"Maryland\",\"Massachusetts\",\"Michigan\",\"Minnesota\",\"Mississippi\",\"Missouri\",\"Montana\",\"Nebraska\",\"Nevada\",\"New Hampshire\",\"New Jersey\",\"New Mexico\",\"New York\",\"North Carolina\",\"North Dakota\",\"Ohio\",\"Oklahoma\",\"Oregon\",\"Pennsylvania\",\"Rhode Island\",\"South Carolina\",\"South Dakota\",\"Tennessee\",\"Texas\",\"Utah\",\"Vermont\",\"Virginia\",\"Washington\",\"West Virginia\",\"Wisconsin\",\"Wyoming\"];\n\nclass MyProfile extends Component {\n\n    state = {\n        disabled: true,\n        kidDisabled: true,\n        userInfo:\n            [\n                {\n                    for: \"userName\",\n                    label: \"Enter your username\",\n                    value: this.props.userName,\n                },\n                {\n                    for: \"city\", //db column\n                    label: \"Enter your city\", //message u see \n                    value: this.props.city\n                },\n                {\n                    for: \"state\",\n                    label: \"Choose a state\",\n                    value: this.props.state,\n                    options: statesList\n                },\n                {\n                    for: \"photoLink\",\n                    label: \"Enter a link for your profile picture\",\n                    value: this.props.photoLink\n                }\n            ],\n        kidInfo: [\n            {\n                name: \"\",\n                id: 1,\n                gradeLevel: \"\",\n                schoolId: \"\"\n            }\n        ],\n        schools: [], //holds all the info related to school \n        kids: [], //Holds all the info related to kids \n        //Grade Level dropdown options \n        gradeLevels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n    };\n\n    //***************Parent Info */\n    //-------------------------------------\n    handleInputChange = event => {\n        // const {name, value} = event.target;\n        const value = event.target.value;\n        // const column = event.target.id;\n        const key = event.target.getAttribute(\"data-id\")\n        let copy = [...this.state.userInfo]\n        copy[key].value = value\n        this.setState({\n            userInfo: copy\n            // [column] : value\n        })\n\n    }\n    //Enable the User to update his profile \n    handleEditButtonClick = event => {\n        event.preventDefault();\n        // console.log(\"EDIT MY PROFILE\");\n        this.setState({\n            disabled: false\n        })\n    }\n    //Saves the changes made to the profile \n    handleSaveButtonClick = event => {\n        event.preventDefault();\n        // console.log(\"SAVE MY PROFILE\");\n        this.setState({\n            disabled: true\n        })\n\n        const userUpdatedData = {\n            userName: this.state.userInfo[0].value,\n            city: this.state.userInfo[1].value,\n            state: this.state.userInfo[2].value,\n            photoLink: this.state.userInfo[3].value\n        }\n\n        console.log(\"Parent Details \", userUpdatedData);\n\n        //Updates the user profile \n        API.updateProfile(userUpdatedData)\n            .then(res => {\n                window.location.reload();\n            })\n            .catch(err => console.log(err));\n    }\n    //***************Parent Info */\n    //-------------------------------------\n\n    //***************Kid Info */\n    //-------------------------------------\n    // //Related to additional Family members : \n    // handleAddNewMember = event => {\n    //     event.preventDefault();\n    //     console.log(\"Add NEW FAMILY MEMBER\");\n    //     //Enable the component \n    //     this.setState({\n    //         addnewMember : true \n    //     })\n\n    // }\n\n    //Enable the User to update his profile \n    handleEditKidButtonClick = event => {\n        event.preventDefault();\n        // console.log(\"EDIT Kid Info\");\n        this.setState({\n            kidDisabled: false\n        })\n    }\n    handleInputKidChange = event => {\n        console.log(\"handleInputKidChange\");\n\n        const value = event.target.value;\n        const key = event.target.getAttribute(\"data-id\");\n\n        let copy = [...this.state.kidInfo];\n        // console.log(\"Copy\", copy); \n        copy[key].value = value;\n\n        this.setState({\n            kidInfo: copy\n        })\n    }\n\n    handleUpdateButtonClick = event => {\n        const kidUpdatedData = {\n            name: this.state.kidInfo[0].value,\n            id: this.state.kidInfo[1].value,\n            gradeLevel: this.state.kidInfo[2].value,\n            schoolId: this.state.kidInfo[3].value\n        }\n\n        console.log(\"Kid Details \", kidUpdatedData);\n\n        //Updates the kid profile \n        API.updateKidForAParent(kidUpdatedData)\n            .then(res => {\n                console.log(\"Kid data - upd\", res);\n                window.location.reload();\n            })\n            .catch(err => console.log(err));\n    }\n\n    handleDeleteKidInfo = event => {\n        event.preventDefault();\n        console.log(\"Delete KID INFO\");\n        API.deleteKidForAParent()\n        .then(res => {\n            console.log(\"Kid deleted\");\n            window.location.reload();\n        })\n        .catch(err => console.log(err));\n    }\n    //***************Kid Info */\n    //-------------------------------------\n\n    componentDidMount() {\n        // retrieves all the kids for the logged in parent... \n        API.findAllKidsForAParent()\n            .then(\n                res => {\n                    console.log(\"Kids for parent\", res.data);\n                    this.setState({\n                        kids: res.data\n                    })\n                }\n            )\n            .catch(err => console.log(err));\n\n        // retrieves all the schools - filter by state \n        API.getAllSchools()\n            .then(\n                res => {\n                    console.log(res.data);\n                    this.setState({\n                        schools: res.data\n                    })\n                }\n            )\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n            <div>\n                <FormContainer>\n                    {/* <FormAction \n                    route={props.route} > */}\n                    {this.state.disabled ?\n                    <div className=\"row\">\n                         {/* Image of the loggeed in user */}\n                        <img className=\"rounded-circle view-pic\" src={this.props.photoLink} />\n                        <FormTitle\n                            title=\"View My Profile\"\n                        />\n                        </div>\n                        :\n                        <FormTitle\n                            title=\"Update Profile Info\"\n                        />\n                    }\n                   \n                    {/* Rendering Form labels using the userInfo object values */}\n\n                    {this.state.userInfo.map((user, i) => {\n                        if (user.for !== \"state\") {\n\n                            return (\n                                <FormLabel\n                                    key={i}\n                                    data={i}\n                                    for={user.for}\n                                    name={user.for}\n                                    label={user.label}\n                                    disabled={this.state.disabled}\n                                    value={user.value}\n                                    handleChange={this.handleInputChange}\n                                />\n                            );\n                        } else {\n                            return (\n                                <Dropdown\n                                    key={i}\n                                    data={i}\n                                    for={user.for}\n                                    label={user.label}\n                                    value={user.value}\n                                    disabled={this.state.disabled}\n                                    handleChange={this.handleInputChange}\n                                >\n                                    {user.options.map((item, j) => {\n                                        return (\n                                            <OptionForDropdown\n                                                option={item}\n                                                value={item}\n                                                key={j}\n                                            />\n                                        )\n                                    })}\n                                </Dropdown>\n                            )\n                        }\n                    }\n                    )}\n\n                    {/* Conditional hide & show the buttons */}\n                    {this.state.disabled ?\n                        <FormButton\n                            nameButton=\"Edit Profile\"\n                            handleButtonClick={this.handleEditButtonClick}\n                        />\n                        :\n                        <div>\n                            <FormButton\n                                nameButton=\"Save Profile\"\n                                handleButtonClick={this.handleSaveButtonClick}\n                            />\n                        </div>\n                    }\n                    {/* Loop through all the kids for the logged in Parent */}\n                    {this.state.kids.length ? (\n                        <div>\n                        {this.state.kids.map((kid, id) => {\n                            return (\n                                <KidProfile\n                                    key={id}\n                                    name={kid.name}\n                                    grade={kid.gradeLevel}\n                                    school={kid.schoolId}\n                                    kidId={kid.id}\n                                />\n                            )})}\n                            </div>) :\n\n                            (<h3>No Family Member(s) found\n                           {/* <FormButton \n                                nameButton =\"Add New Kid Info\"\n                                handleButtonClick={this.handleAddNewMember}\n                            /> */}\n                            </h3>\n                        )\n                    }\n\n                    {/* </FormAction> */}\n                </FormContainer>\n                </div>\n        );\n    }\n}\n\nexport default MyProfile;"]},"metadata":{},"sourceType":"module"}