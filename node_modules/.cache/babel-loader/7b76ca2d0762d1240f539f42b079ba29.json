{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\src\\\\components\\\\postCard\\\\index.js\";\n// make component a statefull component\nimport React, { Component } from \"react\";\nimport { CommentDisplay } from \"../form\";\nimport API from \"../../utils/API\";\nimport \"./style.css\"; // make a api call to get all comment posts\n\nvar PostCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostCard, _Component);\n\n  function PostCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      nameButton: \"Comment\",\n      description: \"\",\n      comments: []\n    };\n\n    _this.getComments = function () {\n      var requestParams = {\n        id: _this.props.postId\n      };\n      API.findAllForPost(requestParams).then(function (res) {\n        _this.setState({\n          comments: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleCommentClick = function (event) {\n      event.preventDefault();\n\n      _this.getComments();\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      console.log(\"Description: \".concat(_this.state.description)); // need to post to MySQL here\n\n      var commentData = {\n        description: _this.state.description,\n        postId: _this.props.postId\n      };\n      API.createComment(commentData).then(function (res) {\n        console.log(\"show res \", res);\n\n        _this.getComments();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n\n      _this.setState({\n        description: \"\"\n      });\n    };\n\n    _this.renderComments = function () {\n      var comments = _this.state.comments; // const { members } = this.props;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, comments.map(function (comment) {\n        // if (comments && members) {\n        // const parent = members.find((member) => member.id === comment.parentId);\n        // const parentUsername = parent && parent.userName;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(CommentDisplay, {\n          for: \"displayComment\",\n          posterName: comment.parent.userName,\n          comment: comment.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        })); // }\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(PostCard, [{\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"card-title\",\n        id: \"postCardTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"p\", {\n        className: \"category\",\n        id: \"postCardCategory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Category:\")), \" \", this.props.category), React.createElement(\"p\", (_React$createElement = {\n        className: \"card-text\",\n        id: \"postCardTitle\"\n      }, _defineProperty(_React$createElement, \"id\", \"postCardPostedBy\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Posted By:\")), \" \", this.props.name), React.createElement(\"p\", {\n        className: \"card-text\",\n        id: \"postCardDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Details:\"), \" \"), this.props.description)), React.createElement(\"button\", {\n        className: \"btn btn-primary btn-lg float-right m-3 mr-5\",\n        id: \"comment\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#post\" + this.props.postId,\n        onClick: this.handleCommentClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Comment\")))), React.createElement(\"div\", {\n        className: \"modal fade\",\n        id: \"post\" + this.props.postId,\n        tabindex: \"-1\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"exampleModalLongTitle\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-dialog\",\n        role: \"document\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        id: \"modalTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, this.renderComments(), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Your Comment:\"), \" \", this.state.description), React.createElement(\"input\", {\n        for: \"comment\",\n        label: \"Comment Here\",\n        type: \"text\",\n        placeholder: \"Description\",\n        name: \"description\",\n        value: this.state.description,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return PostCard;\n}(Component);\n\nexport default PostCard;","map":{"version":3,"sources":["C:\\Users\\kevin\\Documents\\UCB_bootcamp\\Homework\\APParent\\client\\src\\components\\postCard\\index.js"],"names":["React","Component","CommentDisplay","API","PostCard","state","nameButton","description","comments","getComments","requestParams","id","props","postId","findAllForPost","then","res","setState","data","catch","err","console","log","handleInputChange","event","target","name","value","handleCommentClick","preventDefault","handleFormSubmit","commentData","createComment","renderComments","map","comment","parent","userName","title","category"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAO,aAAP,C,CAEA;;IAEMC,Q;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,SADN;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,K;;UAMRC,W,GAAc,YAAM;AAClB,UAAMC,aAAa,GAAG;AACpBC,QAAAA,EAAE,EAAE,MAAKC,KAAL,CAAWC;AADK,OAAtB;AAIAV,MAAAA,GAAG,CAACW,cAAJ,CAAmBJ,aAAnB,EACGK,IADH,CAEI,UAAAC,GAAG,EAAI;AACL,cAAKC,QAAL,CAAc;AACZT,UAAAA,QAAQ,EAAEQ,GAAG,CAACE;AADF,SAAd;AAID,OAPL,EASGC,KATH,CASS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OATZ;AAUD,K;;UAMDG,iB,GAAoB,UAAAC,KAAK,EAAI;AAAA,0BACHA,KAAK,CAACC,MADH;AAAA,UACnBC,IADmB,iBACnBA,IADmB;AAAA,UACbC,KADa,iBACbA,KADa;;AAE3B,YAAKV,QAAL,qBACGS,IADH,EACUC,KADV;AAGD,K;;UAEDC,kB,GAAqB,UAAAJ,KAAK,EAAI;AAC5BA,MAAAA,KAAK,CAACK,cAAN;;AACA,YAAKpB,WAAL;AACD,K;;UAEDqB,gB,GAAmB,UAAAN,KAAK,EAAI;AAC1BA,MAAAA,KAAK,CAACK,cAAN;AACAR,MAAAA,OAAO,CAACC,GAAR,wBAA4B,MAAKjB,KAAL,CAAWE,WAAvC,GAF0B,CAG1B;;AAEA,UAAMwB,WAAW,GAAG;AAClBxB,QAAAA,WAAW,EAAE,MAAKF,KAAL,CAAWE,WADN;AAElBM,QAAAA,MAAM,EAAE,MAAKD,KAAL,CAAWC;AAFD,OAApB;AAKAV,MAAAA,GAAG,CAAC6B,aAAJ,CAAkBD,WAAlB,EACGhB,IADH,CACQ,UAAAC,GAAG,EAAI;AACXK,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,GAAzB;;AACA,cAAKP,WAAL;AACD,OAJH,EAKGU,KALH,CAKS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OALZ;;AAMA,YAAKH,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,K;;UAED0B,c,GAAiB,YAAM;AAAA,UACbzB,QADa,GACA,MAAKH,KADL,CACbG,QADa,EAErB;;AACA,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACLA,QAAQ,CAAC0B,GAAT,CAAa,UAACC,OAAD,EAAa;AACzB;AACA;AACA;AACA,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,oBAAC,cAAD;AAAgB,UAAA,GAAG,EAAC,gBAApB;AAAqC,UAAA,UAAU,EAAEA,OAAO,CAACC,MAAR,CAAeC,QAAhE;AAA0E,UAAA,OAAO,EAAEF,OAAO,CAAC5B,WAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAL,EAA8G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA9G,CAAR,CAJyB,CAKzB;AACD,OANA,CADK,CAAR;AASD,K;;;;;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAA2B,QAAA,EAAE,EAAC,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+C,KAAKK,KAAL,CAAW0B,KAA1D,CADF,EAEE;AAAG,QAAA,SAAS,EAAC,UAAb;AAAwB,QAAA,EAAE,EAAC,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,CADF,OAC2B,KAAK1B,KAAL,CAAW2B,QADtC,CAFF,EAKE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAyB,QAAA,EAAE,EAAC;AAA5B,qDAA+C,kBAA/C;AAAA;AAAA;AAAA,wFACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAH,CADF,OAC4B,KAAK3B,KAAL,CAAWc,IADvC,CALF,EAQE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAyB,QAAA,EAAE,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,MADF,EAC0B,KAAKd,KAAL,CAAWL,WADrC,CARF,CADF,EAaE;AACE,QAAA,SAAS,EAAC,6CADZ;AAEE,QAAA,EAAE,EAAC,SAFL;AAGE,uBAAY,OAHd;AAIE,uBAAa,UAAQ,KAAKK,KAAL,CAAWC,MAJlC;AAKE,QAAA,OAAO,EAAE,KAAKe,kBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAbF,CADF,CADF,CADF,EA+BE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,EAAE,EAAE,SAAO,KAAKhB,KAAL,CAAWC,MAFxB;AAGE,QAAA,QAAQ,EAAC,IAHX;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,2BAAgB,uBALlB;AAME,uBAAY,MANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,IAAI,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,EAAE,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKD,KAAL,CAAW0B,KAAf,CADF,EAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,wBAAa,OAHf;AAIE,sBAAW,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AAAM,uBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CAFF,CADF,EAYE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKL,cAAL,EADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAH,OAAyB,KAAK5B,KAAL,CAAWE,WAApC,CAFF,EAIE;AACE,QAAA,GAAG,EAAC,SADN;AAEE,QAAA,KAAK,EAAC,cAFR;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,aAJd;AAKE,QAAA,IAAI,EAAC,aALP;AAME,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,WANpB;AAOE,QAAA,QAAQ,EAAE,KAAKgB,iBAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAeE;AAAQ,QAAA,OAAO,EAAE,KAAKO,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,CAZF,CADF,CARF,CA/BF,CADF;AA8ED;;;;EAzJoB7B,S;;AA4JvB,eAAeG,QAAf","sourcesContent":["// make component a statefull component\nimport React, { Component } from \"react\";\nimport { CommentDisplay } from \"../form\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\n\n// make a api call to get all comment posts\n\nclass PostCard extends Component {\n  // make a state for the values in this component\n  state = {\n    nameButton: \"Comment\",\n    description: \"\",\n    comments: [],\n  };\n\n  getComments = () => {\n    const requestParams = {\n      id: this.props.postId,\n    }\n\n    API.findAllForPost(requestParams)\n      .then(\n        res => {\n          this.setState({\n            comments: res.data\n          })\n\n        }  \n      )\n      .catch(err => console.log(err));\n  }\n  // componentDidMount() {\n  //   this.getComments();\n  // }\n\n  // write letters on the posting field while typed\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleCommentClick = event => {\n    event.preventDefault();\n    this.getComments()\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(`Description: ${this.state.description}`);\n    // need to post to MySQL here\n\n    const commentData = {\n      description: this.state.description,\n      postId: this.props.postId\n    }\n\n    API.createComment(commentData)\n      .then(res => {\n        console.log(\"show res \", res)\n        this.getComments();\n      })\n      .catch(err => console.log(err));\n    this.setState({ description: \"\" });\n  };\n  \n  renderComments = () => {\n    const { comments } = this.state;\n    // const { members } = this.props;\n    return (<div>\n      {comments.map((comment) => {\n        // if (comments && members) {\n        // const parent = members.find((member) => member.id === comment.parentId);\n        // const parentUsername = parent && parent.userName;\n        return (<div><CommentDisplay for=\"displayComment\" posterName={comment.parent.userName} comment={comment.description}/><hr/></div>)\n        // }\n      })}\n    </div>)\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"card mb-3\">\n          <div className=\"row no-gutters\">\n            <div className=\"col\">\n              <div className=\"card-body\">\n                <h1 className=\"card-title\" id=\"postCardTitle\">{this.props.title}</h1>\n                <p className=\"category\" id=\"postCardCategory\">\n                  <b><u>Category:</u></b> {this.props.category}\n                </p>\n                <p className=\"card-text\" id=\"postCardTitle\" id=\"postCardPostedBy\">\n                  <b><u>Posted By:</u></b> {this.props.name}\n                </p>\n                <p className=\"card-text\" id=\"postCardDetails\">\n                  <b><u>Details:</u> </b>{this.props.description}\n                </p>\n              </div>\n              <button\n                className=\"btn btn-primary btn-lg float-right m-3 mr-5\"\n                id=\"comment\"\n                data-toggle=\"modal\"\n                data-target={\"#post\"+this.props.postId}\n                onClick={this.handleCommentClick}\n              >\n                Comment\n              </button>\n            </div>\n            \n          </div>\n        </div>\n\n        {/* modal */}\n        <div\n          className=\"modal fade\"\n          id={\"post\"+this.props.postId}\n          tabindex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalLongTitle\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\" id=\"modalTitle\">\n                <b>{this.props.title}</b>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                {this.renderComments()}\n                <p><b>Your Comment:</b> {this.state.description}</p>\n\n                <input\n                  for=\"comment\"\n                  label=\"Comment Here\"\n                  type=\"text\"\n                  placeholder=\"Description\"\n                  name=\"description\"\n                  value={this.state.description}\n                  onChange={this.handleInputChange}\n                />\n\n                {/* <CommentSubmitButton nameButton={this.state.nameButton} /> */}\n                <button onClick={this.handleFormSubmit}>Submit</button>\n\n                {/* need a button to post */}\n                {/* create a handle click for the button - that will post to MySQL */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}