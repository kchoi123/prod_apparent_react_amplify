{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\src\\\\components\\\\postCard\\\\index.js\";\n// make component a statefull component\nimport React, { Component } from \"react\";\nimport { InputText, FormContainer, CommentDisplay, CommentSubmitButton } from \"../form\";\nimport API from \"../../utils/API\";\nimport \"./style.css\"; // make a api call to get all comment posts\n\nvar PostCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostCard, _Component);\n\n  function PostCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      nameButton: \"Comment\",\n      description: \"\",\n      comments: {}\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      console.log(\"Description: \".concat(_this.state.description)); // need to post to MySQL here\n\n      var commentData = {\n        description: _this.state.description,\n        postId: _this.props.postId\n      };\n      API.createComment(commentData).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n\n      _this.setState({\n        description: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PostCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var requestParams = {\n        params: {\n          id: this.props.postId\n        }\n      };\n      API.findAllForPost(requestParams).then(function (res) {\n        return _this2.setState({\n          comments: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } // write letters on the posting field while typed\n\n  }, {\n    key: \"renderComments\",\n    value: function renderComments() {//  this.state.comments.map((comment) => {\n      //     return <CommentDisplay />\n      //   })\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"p\", {\n        className: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Category: \", this.props.category), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Post By: \", this.props.name), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.props.description)), React.createElement(\"button\", {\n        className: \"btn btn-primary btn-lg float-right m-3 mr-5\",\n        id: \"comment\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#exampleModalLong\",\n        onClick: this.handleCommentClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Comment\")))), React.createElement(\"div\", {\n        className: \"modal fade\",\n        id: \"exampleModalLong\",\n        tabindex: \"-1\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"exampleModalLongTitle\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-dialog\",\n        role: \"document\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.props.title, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.renderComments(), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Your Comment: \", this.state.description), React.createElement(\"input\", {\n        for: \"comment\",\n        label: \"Comment Here\",\n        type: \"text\",\n        placeholder: \"Description\",\n        name: \"description\",\n        value: this.state.description,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return PostCard;\n}(Component);\n\nexport default PostCard;","map":{"version":3,"sources":["C:\\Users\\kevin\\Documents\\UCB_bootcamp\\Homework\\APParent\\client\\src\\components\\postCard\\index.js"],"names":["React","Component","InputText","FormContainer","CommentDisplay","CommentSubmitButton","API","PostCard","state","nameButton","description","comments","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","console","log","commentData","postId","props","createComment","then","res","catch","err","requestParams","params","id","findAllForPost","data","title","category","handleCommentClick","renderComments"],"mappings":"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","sourcesContent":["// make component a statefull component\nimport React, { Component } from \"react\";\nimport {\n  InputText,\n  FormContainer,\n  CommentDisplay,\n  CommentSubmitButton\n} from \"../form\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\n\n// make a api call to get all comment posts\n\nclass PostCard extends Component {\n  // make a state for the values in this component\n  state = {\n    nameButton: \"Comment\",\n    description: \"\",\n    comments: {},\n  };\n\n  componentDidMount() {\n    const requestParams = {\n      params: {\n        id: this.props.postId,\n      }\n    };\n\n    API.findAllForPost(requestParams)\n      .then(\n        res =>\n          this.setState({\n            comments: res.data\n          })\n      )\n      .catch(err => console.log(err));\n\n  }\n\n  // write letters on the posting field while typed\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(`Description: ${this.state.description}`);\n    // need to post to MySQL here\n\n    const commentData = {\n      description: this.state.description,\n      postId: this.props.postId\n    }\n\n    API.createComment(commentData)\n      .then(res => {\n        console.log(res)\n      })\n      .catch(err => console.log(err));\n    this.setState({ description: \"\" });\n  };\n  \n  renderComments() {\n  //  this.state.comments.map((comment) => {\n  //     return <CommentDisplay />\n  //   })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"card mb-3\">\n          <div className=\"row no-gutters\">\n            <div className=\"col\">\n              <div className=\"card-body\">\n                <h1 className=\"card-title\">{this.props.title}</h1>\n                <p className=\"category\">\n                  Category: {this.props.category}\n                </p>\n                <p className=\"card-text\">\n                  Post By: {this.props.name}\n                </p>\n                <p className=\"card-text\">\n                  {this.props.description}\n                </p>\n              </div>\n              <button\n                className=\"btn btn-primary btn-lg float-right m-3 mr-5\"\n                id=\"comment\"\n                data-toggle=\"modal\"\n                data-target=\"#exampleModalLong\"\n                onClick={this.handleCommentClick}\n              >\n                Comment\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* modal */}\n        <div\n          className=\"modal fade\"\n          id=\"exampleModalLong\"\n          tabindex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalLongTitle\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                {this.props.title}\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                {/* create another component for displaying */}\n                {this.renderComments()}\n                <p>Your Comment: {this.state.description}</p>\n\n                <input\n                  for=\"comment\"\n                  label=\"Comment Here\"\n                  type=\"text\"\n                  placeholder=\"Description\"\n                  name=\"description\"\n                  value={this.state.description}\n                  onChange={this.handleInputChange}\n                />\n\n                {/* <CommentSubmitButton nameButton={this.state.nameButton} /> */}\n                <button onClick={this.handleFormSubmit}>Submit</button>\n\n                {/* need a button to post */}\n                {/* create a handle click for the button - that will post to MySQL */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}