{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Documents\\\\UCB_bootcamp\\\\Homework\\\\APParent\\\\client\\\\src\\\\components\\\\postCard\\\\index.js\";\n// make component a statefull component\nimport React, { Component } from \"react\";\nimport { CommentSubmitButton, CommentDisplay } from \"../form\";\nimport moment from \"moment\";\nimport API from \"../../utils/API\";\nimport \"./style.css\"; // make a api call to get all comment posts\n\nvar PostCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostCard, _Component);\n\n  function PostCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      nameButton: \"Comment\",\n      description: \"\",\n      timeStamp: \"\",\n      comments: []\n    };\n\n    _this.getComments = function () {\n      var requestParams = {\n        id: _this.props.postId\n      };\n      API.findAllForPost(requestParams).then(function (res) {\n        _this.setState({\n          comments: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleCommentClick = function (event) {\n      event.preventDefault();\n\n      _this.getComments();\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      console.log(\"Description: \".concat(_this.state.description)); // need to post to MySQL here\n\n      var commentData = {\n        description: _this.state.description,\n        postId: _this.props.postId\n      };\n      API.createComment(commentData).then(function (res) {\n        console.log(\"show res \", res);\n\n        _this.getComments();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n\n      _this.setState({\n        description: \"\"\n      });\n    };\n\n    _this.renderComments = function () {\n      var comments = _this.state.comments; // const { members } = this.props;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, comments.map(function (comment) {\n        // if (comments && members) {\n        // const parent = members.find((member) => member.id === comment.parentId);\n        // const parentUsername = parent && parent.userName;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(CommentDisplay, {\n          for: \"displayComment\",\n          posterName: comment.parent.userName,\n          comment: comment.description,\n          updatedAt: comment.updatedAt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        })); // }\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(PostCard, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"post-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body post-content text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"rounded-circle profile-icon mx-2\",\n        src: this.props.userPhoto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"sub-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        className: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.props.name), \" posted\"), React.createElement(\"p\", {\n        className: \"last-updated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, moment(this.props.updatedAt).fromNow()))), React.createElement(\"span\", {\n        className: \"category my-auto card-text\",\n        id: \"postCardCategory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Category:\"), \" \", this.props.category), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"card-title mx-auto\",\n        id: \"postCardTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"p\", {\n        className: \"card-text mx-auto\",\n        id: \"postCardDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Details:\"), \" \"), this.props.description)), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"post-photo\",\n        src: this.props.postPhoto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        className: \"btn btn-lg mx-auto open-comment\",\n        id: \"comment\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#post\" + this.props.postId,\n        onClick: this.handleCommentClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"far fa-comment-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), \" Comment\")))), React.createElement(\"div\", {\n        className: \"modal fade\",\n        id: \"post\" + this.props.postId,\n        tabindex: \"-1\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"exampleModalLongTitle\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-dialog\",\n        role: \"document\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        id: \"modalTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.renderComments(), React.createElement(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Your Comment:\"), \" \", this.state.description), React.createElement(\"input\", {\n        for: \"comment\",\n        label: \"Comment Here\",\n        type: \"text\",\n        placeholder: \"Description\",\n        name: \"description\",\n        value: this.state.description,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(CommentSubmitButton, {\n        handleButtonClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return PostCard;\n}(Component);\n\nexport default PostCard;","map":{"version":3,"sources":["C:\\Users\\kevin\\Documents\\UCB_bootcamp\\Homework\\APParent\\client\\src\\components\\postCard\\index.js"],"names":["React","Component","CommentSubmitButton","CommentDisplay","moment","API","PostCard","state","nameButton","description","timeStamp","comments","getComments","requestParams","id","props","postId","findAllForPost","then","res","setState","data","catch","err","console","log","handleInputChange","event","target","name","value","handleCommentClick","preventDefault","handleFormSubmit","commentData","createComment","renderComments","map","comment","parent","userName","updatedAt","userPhoto","fromNow","category","title","postPhoto"],"mappings":"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","sourcesContent":["// make component a statefull component\nimport React, { Component } from \"react\";\nimport { CommentSubmitButton, CommentDisplay } from \"../form\";\nimport moment from \"moment\"\nimport API from \"../../utils/API\";\nimport \"./style.css\";\n\n// make a api call to get all comment posts\n\nclass PostCard extends Component {\n  // make a state for the values in this component\n  state = {\n    nameButton: \"Comment\",\n    description: \"\",\n    timeStamp: \"\",\n    comments: [],\n  };\n\n  getComments = () => {\n    const requestParams = {\n      id: this.props.postId,\n    }\n\n    API.findAllForPost(requestParams)\n      .then(\n        res => {\n          this.setState({\n            comments: res.data\n          })\n\n        }\n      )\n      .catch(err => console.log(err));\n  }\n  // componentDidMount() {\n  //   this.getComments();\n  // }\n\n  // write letters on the posting field while typed\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleCommentClick = event => {\n    event.preventDefault();\n    this.getComments()\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(`Description: ${this.state.description}`);\n    // need to post to MySQL here\n\n    const commentData = {\n      description: this.state.description,\n      postId: this.props.postId\n    }\n\n    API.createComment(commentData)\n      .then(res => {\n        console.log(\"show res \", res)\n        this.getComments();\n      })\n      .catch(err => console.log(err));\n    this.setState({ description: \"\" });\n  };\n\n  renderComments = () => {\n    const { comments } = this.state;\n    // const { members } = this.props;\n    return (<div>\n      {comments.map((comment) => {\n        // if (comments && members) {\n        // const parent = members.find((member) => member.id === comment.parentId);\n        // const parentUsername = parent && parent.userName;\n        return (<div><CommentDisplay for=\"displayComment\" posterName={comment.parent.userName} comment={comment.description} updatedAt={comment.updatedAt} /><hr /></div>)\n        // }\n      })}\n    </div>)\n  }\n\n  render() {\n    return (\n      <div className=\"post-container\">\n        <div className=\"card mb-3\">\n          <div className=\"row no-gutters\">\n            <div className=\"col\">\n              <div className=\"card-body post-content text-left\">\n                <div className=\"wrapper-div\">\n                  <img className=\"rounded-circle profile-icon mx-2\" src={this.props.userPhoto} />\n                  <div className=\"sub-div\">\n                    <p><b className=\"author\">{this.props.name}</b> posted</p>\n                    <p className=\"last-updated\">{moment(this.props.updatedAt).fromNow()}</p>\n                  </div>\n                </div>\n                <span className=\"category my-auto card-text\" id=\"postCardCategory\">\n                  <b>Category:</b> {this.props.category}\n                </span>\n                <hr/>\n                <div className=\"mx-auto\">\n                  <p className=\"card-title mx-auto\" id=\"postCardTitle\">{this.props.title}</p>\n                  <p className=\"card-text mx-auto\" id=\"postCardDetails\">\n                    <b><u>Details:</u> </b>{this.props.description}\n                  </p>\n                </div>\n\n                <div className=\"text-center\"><img className=\"post-photo\" src={this.props.postPhoto} /></div>\n                {/* <p className=\"card-text\" id=\"postCardTitle\" id=\"postCardPostedBy\">\n                  <b><u>Posted By:</u></b> {this.props.name}\n                </p> */}\n\n\n              </div>\n              <button\n                className=\"btn btn-lg mx-auto open-comment\"\n                id=\"comment\"\n                data-toggle=\"modal\"\n                data-target={\"#post\" + this.props.postId}\n                onClick={this.handleCommentClick}\n              >\n                <i className=\"far fa-comment-alt\"></i> Comment\n              </button>\n            </div>\n\n          </div>\n        </div>\n\n        {/* modal */}\n        <div\n          className=\"modal fade\"\n          id={\"post\" + this.props.postId}\n          tabindex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalLongTitle\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\" id=\"modalTitle\">\n                <b>{this.props.title}</b>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                {this.renderComments()}\n                <form onSubmit={this.handleFormSubmit}>\n                  <p><b>Your Comment:</b> {this.state.description}</p>\n\n                  <input\n                    for=\"comment\"\n                    label=\"Comment Here\"\n                    type=\"text\"\n                    placeholder=\"Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.handleInputChange}\n                  />\n\n                  <CommentSubmitButton handleButtonClick={this.handleFormSubmit} />\n                  {/* <button onClick={this.handleFormSubmit}>Submit</button> */}\n                </form>\n                {/* need a button to post */}\n                {/* create a handle click for the button - that will post to MySQL */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}